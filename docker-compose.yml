version: '3.7'
services:
    monstache:
        image: rwynn/monstache:6.4.1
        container_name: monstache
        working_dir: /app
        command: -f ./monstache.config.toml
        volumes:
          - ./monstache.config.toml:/app/monstache.config.toml
          - ./plugin/plugin.so:/app/plugin.so
        depends_on:
          - projecta_mongodb
          - projecta_elasticsearch
        ports:
          - "8080:8080"
        networks:
          - projecta
        healthcheck:
          test: "wget -q -O - http://localhost:8080/healthz"
          interval: 10s
          timeout: 30s
          retries: 300
        restart: always
    
    
    projecta_mongodb:
        image: mongo:latest
        container_name: projecta_mongodb
        hostname: projecta_mongodb
        volumes:
            - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
            - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
            - ./.docker/mongodb/data/db/:/data/db/
            - ./.docker/mongodb/data/log/:/var/log/mongodb/
        expose:
            - 27017
        env_file:
            - .env
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
            MONGO_REPLICA_SET_NAME: rs0
            MONGO_REPLICAS: projecta_mongodb:27017
            MONGO_REPLICA_SET_MEMBERS: "[{'_id':0,'host':'projecta_mongodb:27017','priority':1}]"
            MONGO_USER_ROOT_NAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_USER_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            MONGO_AUTH_SOURCE: admin
            MONGO_BIND_IP: "0.0.0.0"
        ports:
            - "27017:27017"
        networks:
            - projecta
        healthcheck:
            test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
            interval: 10s
            start_period: 30s
        command: ["-f", "/etc/mongod.conf", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]


    zookeeper:
        image: debezium/zookeeper:1.2
        container_name: zookeeper
        restart: always
        ports:
            - "2181:2181"
            - "2888:2888"
            - "3888:3888"
        networks:
            - projecta
    kafka:
        image: debezium/kafka:1.2
        container_name: kafka
        restart: always
        ports:
            - "9092:9092"
        links:
            - zookeeper
        depends_on:
            - zookeeper
        environment:
            - ZOOKEEPER_CONNECT=zookeeper:2181
        networks:
            - projecta
    connect:
        image: debezium/connect:1.2
        container_name: debezium
        restart: always
        ports:
            - "8083:8083"
        links:
            - zookeeper
            - kafka
        environment:
            BOOTSTRAP_SERVERS: "kafka:9092"
            GROUP_ID: 1
            CONFIG_STORAGE_TOPIC: my_connect_configs
            OFFSET_STORAGE_TOPIC: my_connect_offsets
            STATUS_STORAGE_TOPIC: my_connect_statuses
        depends_on:
            - zookeeper
            - kafka
        networks:
            - projecta



    projecta_elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
        container_name: projecta_elasticsearch
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        mem_limit: 1g
        cap_add:
            - IPC_LOCK
        environment:
            - "discovery.type=single-node"
            - "ES_JAVA_OPTS=-Xms750m -Xmx750m"
        ports:
            - "9200:9200"
        networks:
            - projecta
        healthcheck:
            test: "curl --fail http://projecta_elasticsearch:9200 || exit 1"
            interval: 2s
            timeout: 60s
            retries: 300
networks:
    projecta:
        driver: bridge